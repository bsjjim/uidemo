<?xml version="1.0" encoding="UTF-8"?>
<MetaInfo version="2.0">
  <Object id="nexacro.Application">
    <ObjectInfo finalclass="true" inheritance="" classname="nexacro.Application" shorttypename="Application" csstypename="" csscontrolname="" group="Object" subgroup="Object" csspseudo="" container="false" composite="false" tabstop="false" cssstyle="false" contents="false" formats="false" contentseditor="" defaultwidth="false" defaultheight="false" registration="system" edittype="" useinitvalue="false" popup="false" edittypecomponent="" dblclickevent="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This object deals with basic information of an application that is based on Nexacro. This object also addresses the environmental information that is provided when the application is created." />
    <PropertyInfo>
      <Property name="all" group="" subgroup="" refreshinfo="" edittype="" readonly="true" initonly="false" hidden="true" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This is a read-only property that holds all the objects registered in a certain application." csspropertyname="" normalpropertyname="all" />
      <Property name="licenseurl" group="" subgroup="" refreshinfo="" edittype="FileName" readonly="false" initonly="true" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This property is used to specify the path to the file that contains the information on a license." csspropertyname="" normalpropertyname="licenseurl" />
      <Property name="mainframe" group="" subgroup="" refreshinfo="" edittype="" defaultvalue="" readonly="true" initonly="false" hidden="true" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This read-only property holds the MainFrame of an application." csspropertyname="" normalpropertyname="mainframe" />
      <Property name="name" group="" subgroup="" refreshinfo="" edittype="" readonly="false" initonly="false" hidden="true" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This property is used to specify the name of an application." csspropertyname="" normalpropertyname="name" />
      <Property name="onlyone" group="" subgroup="" refreshinfo="" edittype="" defaultvalue="" readonly="true" initonly="false" hidden="true" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Property to set whether to use same Instance for values of Key and XADL." csspropertyname="" normalpropertyname="onlyone" />
      <Property name="screenid" group="Information" subgroup="" refreshinfo="" edittype="ScreenID" readonly="false" initonly="true" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This property is used to set the IDs of screens applied to an application." csspropertyname="" normalpropertyname="screenid" />
      <Property name="trays" group="" subgroup="" refreshinfo="" edittype="" readonly="true" initonly="false" hidden="true" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="Windows NRE" description="This read-only property holds the information on the trays registered in an application." csspropertyname="" normalpropertyname="trays" />
      <Property name="version" group="Misc." subgroup="" refreshinfo="" edittype="" defaultvalue="" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This property is used to set the version of an application." csspropertyname="" normalpropertyname="version" />
    </PropertyInfo>
    <CSSInfo>
      <PropertyInfo />
    </CSSInfo>
    <StatusInfo />
    <ControlInfo />
    <MethodInfo>
      <Method name="addEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method is used to add a handler to a certain event of an application.">
        <Syntax text="Application.addEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Number" description="It returns the index of the handler that has been added to the event by this method.&#xA;If the same handler already exists, it will return the index of the existing handler.&#xA;If it fails to add a handler successfully, it will return -1." />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="A handler function to add" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="The scope in which the handler function is valid" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of an event that the handler will be added to" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="addEventHandlerLookup" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method is used to find a function and add it to a certain event of an application as a handler.">
        <Syntax text="Application.addEventHandlerLookup( strEventID, strFunc, objTarget )">
          <Return type="Number" description="It returns the index of the handler that has been added to the event by this method.&#xA;If the same handler already exists, it will return the index of the existing handler.&#xA;If it fails to add a handler successfully, it will return -1." />
          <Arguments>
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="A scope in which you search for the handler function&#xA;If this method fails to find the funtion in a specified scope, it will then search the regions at higher levels." />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of an event that the handler will be added to" />
            <Argument name="strFunc" type="String" in="false" out="false" option="false" variable="false" description="A string that represents the name of a handler function to add" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="addTray" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="Windows NRE" description="This method is used to add a dynamically-created tray to an application.">
        <Syntax text="Application.addTray(strTrayID, objTray)">
          <Return type="Number" description="This method returns the index number of a Tray object that has been added to the trays property.&#xA;&#xA;If the addition of a Tray object is failed, this method will return -1." />
          <Arguments>
            <Argument name="objTray" type="Object" in="false" out="false" option="false" variable="false" description="This is a Tray object to add to an application." />
            <Argument name="strTrayID" type="String" in="false" out="false" option="false" variable="false" description="This is the ID of a Tray object to add to an application." />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="addVariable" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method is used to add a variable to the AppVariables field of an application.">
        <Syntax text="Application.addVariable( strID, varValue )">
          <Return type="Number" description="This method will return 1 if it adds a variable successfully.&#xA;This method will return 0 if it fails to add a variable.&#xA;This method will return -1 if there is the same variable already." />
          <Arguments>
            <Argument name="strID" type="String" in="false" out="false" option="false" variable="false" description="It is the ID of a variable to add." />
            <Argument name="varValue" type="String" in="false" out="false" option="false" variable="false" description="It is the value held by the variable to add." />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="alert" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method is used to display an alert box in an application.">
        <Syntax text="Application.alert( strText )">
          <Return type="" description="" />
          <Arguments>
            <Argument name="strText" type="String" in="false" out="false" option="false" variable="false" description="This is text to be displayed in the alert box." />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="cancelTransaction" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method is used to cancel an ongoing transaction.">
        <Syntax text="cancelTransaction( [strSvcID] )">
          <Return type="" description="" />
          <Arguments>
            <Argument name="strSvcID" type="String" in="false" out="false" option="false" variable="false" description="This is the ID of a transaction you want to cancel.&#xA;&#xA;If you specify nothing, this method will cancel a transaction forcibly in the same way you press the ESC key during a transaction." />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="clearEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method is used to delete all the event handlers registered in a certain event.">
        <Syntax text="Application.clearEventHandler( strEventID )">
          <Return type="Number" description="It returns the number of deleted event handler functions." />
          <Arguments>
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of an event, all of whose handlers will be deleted" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="confirm" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="The method to display the selected dialogue box of the application.">
        <Syntax text="Application.confirm( strText [,strCaption [,strType]] )">
          <Return type="Boolean" description="&quot;True” is returned when selecting the “Ok” button in the selection dialogue box displayed.&#xA;&quot;False” is returned when selecting the “Cancel” button in the selection dialogue box displayed." />
          <Arguments>
            <Argument name="strCaption" type="String" in="false" out="false" option="false" variable="false" description="Set the text to be displayed in the TitleBar of the dialogue box.&#xA;&#xA;- This parameter is not supported in WRE.&#xA;The set vaue is ignored in WRE." />
            <Argument name="strText" type="String" in="false" out="false" option="false" variable="false" description="This is text to display in the dialog box." />
            <Argument name="strType" type="String" in="false" out="false" option="false" variable="false" description="Set the icon type to be displayed on the left area of the dialogue box in strings.&#xA;&#xA;A red “X” icon is displayed when &quot;error&quot; is set.&#xA;A question mark (&quot;?&quot;) icon is displayed when “question” is set.&#xA;An exclamation mark (&quot;!&quot;) icon is displayed on a yellow background when “warning” is set.&#xA;An exclamation mark (&quot;!&quot;) icon is displayed on a blue background when “information” is set.&#xA;&#xA;Icons are not displayed if the value is not set.&#xA;&#xA;- This parameter is not supported in WRE.&#xA; The set vaue is ignored in WRE." />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="enableOnlyOne" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Method to activate OnlyOne function to activate the application rather than a new application if same application is conducted.">
        <Syntax text="[application.]enableOnlyOne()">
          <Return type="Boolean" description="If successful, it shall return true. In case of being conducted in OnlyOne status or failure, it shall return false." />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="exit" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method is used to close the running Nexacro application.">
        <Syntax text="Application.exit()">
          <Return type="" description="" />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="findEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method finds a handler in a certain event of an application and returns the index of the handler.">
        <Syntax text="Application.findEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Number" description="It returns the index of the handler that you intend to find.&#xA;&#xA;If it fails to find the handler, it will return -1." />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="The handler function to find" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="The scope in which the handler function is valid" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of an event that you will search to find the handler" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="getActiveForm" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method returns the currently-activated Form of an application.">
        <Syntax text="Application.getActiveForm()">
          <Return type="Object" description="This method returns the parent Form of a component that is focused currently.&#xA;&#xA;If focus is on a container component like a Div, this method will return the parent Form of the container component." />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="getActiveFrame" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method returns the currently-activated frame of an application.">
        <Syntax text="Application.getActiveFrame()">
          <Return type="Object" description="This method returns the parent frame of a Form that is focused currently.&#xA;&#xA;This method returns a currently-focused frame including the child frame of a modal or modeless window." />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="getEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method returns a specific handler from a certain event of an application by specifying the index number of the handler.">
        <Syntax text="Application.getEventHandler( strEventID, nIdx )">
          <Return type="Object" description="It returns the object of an event handler whose index number is specified. &#xA;&#xA;If there is no handler for the specified index number, it will return &quot;null&quot;." />
          <Arguments>
            <Argument name="nIdx" type="Number" in="false" out="false" option="false" variable="false" description="The index number of the event handler you want to find&#xA;&#xA;The index number begins from 0." />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of an event that you search for your sought handler" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="getTrustDomainList" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Method to obtain Trust Domain list.">
        <Syntax text="[application.]getTrustDomainList()">
          <Return type="Object" description="It is Array Object." />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="getTrustPathList" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Method to obtain Trust Path list.">
        <Syntax text="[application.]getTrustPathList()">
          <Return type="Object" description="It is Array Object." />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="insertEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method is used to add a handler to a certain event of an application at a specified position.">
        <Syntax text="Application.insertEventHandler( strEventID, nIndex, objFunc, objTarget )">
          <Return type="Number" description="It returns the index of the handler that has been inserted to the event by this method.&#xA;If the same handler already exists, it will return the index of the existing handler.&#xA;&#xA;If this method fails to insert a handler successfully, it will return -1." />
          <Arguments>
            <Argument name="nIndex" type="Number" in="false" out="false" option="false" variable="false" description="This is an index number of the position at which the handler will be added.&#xA;&#xA;If you specify -1, the handler will be added at the end.&#xA;If you specify a value bigger than the number of handlers defined in the event, the handler will be added at the end.&#xA;If you specify a NaN value, the values will turn to 0 in compliance with ECMA's conversion rule." />
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="A handler function to add" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="The scope in which the handler function is valid" />
            <Argument name="strEventID" type="String" in="true" out="true" option="true" variable="true" description="The ID of an event that the handler will be inserted to" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="isExistVariable" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method returns the existence of a certain variable defined in the AppVariables field of an application.">
        <Syntax text="Application.isExistVariable( strID );">
          <Return type="Boolean" description="This method will return &quot;true&quot; if the variable exists in the AppVariables field.&#xA;Otherwise, it will return &quot;false&quot;." />
          <Arguments>
            <Argument name="strID" type="String" in="false" out="false" option="false" variable="false" description="It is the ID of a variable whose existence you want to check." />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="lookup" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method searches an entire application for the object delivered as an argument and returns the object.">
        <Syntax text="Application.lookup( strObjectID )">
          <Return type="Object" description="This method will return an object found as the result of a search." />
          <Arguments>
            <Argument name="strObjectID" type="String" in="false" out="false" option="false" variable="false" description="This is a string that represents the ID of an object you want to find." />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="removeEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method is used to remove a handler in a certain event of an application.">
        <Syntax text="Application.removeEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Number" description="If it succeeds in removing the handler, it will return 1.&#xA;Otherwise, it will return 0." />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="A handler function to remove" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="The scope in which the handler function is valid" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of the event that holds the handler" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="removeEventHandlerLookup" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method is used to find a handler in a certain event of an application and remove it.">
        <Syntax text="Application.removeEventHandlerLookup( strEventID, strFunc, objTarget )">
          <Return type="Number" description="If it succeeds in removing the handler, it will return 1.&#xA;Otherwise, it will return 0." />
          <Arguments>
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="The scope in which the handler function is valid&#xA;If this method fails to find the handler in a specified scope, it will then search the regions at higher levels." />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of an event that you will search to find the handler" />
            <Argument name="strFunc" type="String" in="false" out="false" option="false" variable="false" description="A string that represents the name of a handler function to remove" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="removeTray" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="Windows NRE" description="This method is used to delete a Tray object registered in the trays property of an application.">
        <Syntax text="application.removeTray([strID]);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="strId" type="String" in="false" out="false" option="false" variable="false" description="This is the ID of a Tray object to delete from the trays property of the application.&#xA;&#xA;If you specify nothing, all the Tray objects will be removed." />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="removeVariable" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method is used to remove a variable from the AppVariables field of an application.">
        <Syntax text="Application.removeVariable( strID )">
          <Return type="" description="" />
          <Arguments>
            <Argument name="strID" type="String" in="false" out="false" option="false" variable="false" description="It is the ID of a variable to remove." />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="setEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method is used to change the first handler in a certain event of an application.">
        <Syntax text="Application.setEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Number" description="If it succeeds in changing the first handler, it will return 0.&#xA;Otherwise, it will return -1." />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="The handler function that will replace the existing handler" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="The scope in which the new handler function is valid" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of the event that holds the existing handler" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="setEventHandlerLookup" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method finds a function and uses it to replace the first handler in a certain event of an application.">
        <Syntax text="Application.setEventHandlerLookup( strEventID, strFunc, objTarget )">
          <Return type="Number" description="If it succeeds in changing the first handler, it will return 0.&#xA;Otherwise, it will return -1." />
          <Arguments>
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="A scope in which you search for the new handler function&#xA;If this method fails to find the function in a specified scope, it will then search the regions at higher levels." />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="The ID of the event that holds the existing handler" />
            <Argument name="strFunc" type="String" in="false" out="false" option="false" variable="false" description="A string that represents the name of a function that will replace the existing handler" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="setVariable" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method is used to add a variable to the AppVariables field of an application. This method is also used to set the value of a variable defined in the AppVariables field of an application.">
        <Syntax text="Application.setVariable( strID, varValue )">
          <Return type="Number" description="This method will return 1 if it adds a variable successfully.&#xA;This method will return 0 if it fails to add a variable.&#xA;This method will return -1 if there is the same variable already." />
          <Arguments>
            <Argument name="strID" type="String" in="false" out="false" option="false" variable="false" description="It is the ID of a variable to add." />
            <Argument name="varValue" type="String" in="false" out="false" option="false" variable="false" description="It is the value held by the variable to add." />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="trace" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method is used to leave a trace log.">
        <Syntax text="Application.trace( strLog )">
          <Return type="" description="" />
          <Arguments>
            <Argument name="strLog" type="String" in="false" out="false" option="false" variable="false" description="This is a string that you want to print as a log." />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="transaction" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="The method to call a service to renew the data of the dataset defined in the application area and execute the callback function once the transaction is completed.">
        <Syntax text="Application.transaction(strSvcID,strURL,strInDatasets,strOutDatasets,strArgument,strCallbackFunc[,bAsync[,nDataType[,bCompress]]])">
          <Return type="" description="" />
          <Arguments>
            <Argument name="bAsync" type="Boolean" in="false" out="false" option="false" variable="false" description="It specifies whether the transaction is asynchronous.&#xA;&#xA;For &quot;true&quot;, a transaction will be conducted in the asynchronous manner. Therefore, the script will be executed regardless of the completion of the transaction.&#xA;For &quot;false&quot;, a transaction will be conducted in the synchronous manner. Therefore, the script will be suspended until the completion of the transaction.&#xA;&#xA;The default value is &quot;true&quot;." />
            <Argument name="bCompress" type="Boolean" in="false" out="false" option="false" variable="false" description="It determines whether to compress data in a transaction.&#xA; &#xA;For &quot;true&quot;, data will be compressed in a transaction.&#xA;For &quot;false&quot;, data will not be compressed in a transaction.&#xA;&#xA;The default value is &quot;false&quot;." />
            <Argument name="nDataType" type="Number" in="false" out="false" option="false" variable="false" description="It determines the type of the data used in a transaction.&#xA; &#xA;For 0, XML-formatted data will be used.&#xA;For 1, binary data will be used.&#xA;For 2, SSV-formatted data will be used.&#xA;For 3, JSON-formatted data will be used.&#xA;&#xA;The default value is 0." />
            <Argument name="strArgument" type="String" in="false" out="false" option="false" variable="false" description="A string representing the information sent to the server page&#xA;An argument is specified with the format &quot;variable ID=variable value&quot; while you can specify multiple arguments by dividing them with white spaces.&#xA;&#xA;ex) &quot;argu0=test argu1=30&quot;" />
            <Argument name="strCallbackFunc" type="String" in="false" out="false" option="false" variable="false" description="A string representing a callback that will be called upon receiving the result of a transaction&#xA;The callback must be defined in the domain of a Form or an Application" />
            <Argument name="strInDatasets" type="String" in="false" out="false" option="false" variable="false" description="A string representing the ID of a Dataset sent to the server for a data transaction&#xA;The Dataset must be defined in AppVariables of an Application.&#xA;The argument is specified with the format &quot;input ID=Dataset ID&quot;. You can specify multiple Datasets by dividing them with white spaces.&#xA;&#xA;ex) &quot;input1=DataSet00 input2=DataSet01&quot;&#xA;&#xA;The Dataset object of the Application sub-object can be set as follows:&#xA;&#xA;ex) &quot;input1=mainframe.frame.form.Dataset00 input2=Dataset01&quot;" />
            <Argument name="strOutDatasets" type="String" in="false" out="false" option="false" variable="false" description="Set the DataSet ID for receiving data sent from the server in strings.&#xA;The DataSet should be defined in the AppVariables area of the Application.&#xA;&quot;DataSet ID=Output ID&quot; is the setting format and multiple DataSet can be received and distinguished by spacing.&#xA;&#xA;ex) &quot;DataSet00=output0 DataSet01=output1&quot;&#xA;&#xA;One Output Dataset (Output ID) can be received from multiple Datasets in the format below.&#xA;&#xA;ex) &quot;DataSet00=output0 DataSet01=output0&quot;&#xA;&#xA;The Dataset object of the Application sub-object can be set as follows:&#xA;&#xA;ex) &quot;mainframe.frame.form.Dataset00=ouput0 Dataset01=output1&quot;" />
            <Argument name="strSvcID" type="String" in="false" out="false" option="false" variable="false" description="A string representing an ID to distinguish transactions." />
            <Argument name="strURL" type="String" in="false" out="false" option="false" variable="false" description="A string representing an address to request a transaction." />
          </Arguments>
        </Syntax>
      </Method>
    </MethodInfo>
    <EventHandlerInfo>
      <EventHandler name="onafteruserconfirm" group="" deprecated="false" unused="false" requirement="Windows NRE,Android NRE" description="This event occurs after a user confirmation dialog is closed.">
        <Syntax text="Application.onafteruserconfirm(obj:nexacro.Application,e:nexacro.EventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="EventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onbeforeexit" group="" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This event occurs before an application is closed.">
        <Syntax text="Application.onbeforeexit(obj:nexacro.Application,e:nexacro.ExitEventInfo);">
          <Return type="String" description="If you specify a string as a return value of this event, a dialog will appear to ask you whether to exit the application.&#xA;The specified return value will be used for the exit dialog.&#xA;&#xA;If you omit a return value or specify &quot;null&quot;, &quot;undefined&quot; or empty string(&quot;&quot;), an exit dialog will not appear." />
          <Arguments>
            <Argument name="e" type="ExitEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onbeforeuserconfirm" group="" deprecated="false" unused="false" requirement="Windows NRE,Android NRE" description="This event occurs before a user confirmation dialog is displayed.">
        <Syntax text="Application.onbeforeuserconfirm(obj:nexacro.Application,e:nexacro.EventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="EventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onduplicateexecution" group="" deprecated="false" unused="false" requirement="Windows NRE" description="This event is triggered by the duplicate execution of an application that does not permit duplicate execution.">
        <Syntax text="Application.onduplicateexecution(obj:nexacro.Application,e:nexacro.DuplicateExecutionEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="DuplicateExecutionEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onerror" group="" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This event occurs when an error occurs in a transaction conducted in an Application.">
        <Syntax text="Application.onerror(obj:nexacro.Application,e:nexacro.ErrorEventInfo);">
          <Return type="Boolean" description="If this event returns &quot;true&quot;,&#xA; &gt; it will not bubble to the onerror event of the Environment object.&#xA; &gt; it will maintain the ongoing transaction without a pause.&#xA;&#xA;If this event returns &quot;false&quot;,&#xA; &gt; it will bubble to the onerror event of the Environment object.&#xA; &gt; the value returned by the onerror event of the Environment will determine whether to stop the ongoing transaction.&#xA; &gt; the ongoing transaction will be cancelled if you do not define the onerror event for the Environment&#xA;&#xA;The default return value is &quot;false&quot;." />
          <Arguments>
            <Argument name="e" type="ErrorEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onexit" group="" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This event occurs when an application is closed.">
        <Syntax text="Application.onexit(obj:nexacro.Application,e:nexacro.ExitEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="ExitEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onload" group="" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This event occurs after all the objects and data of an application are loaded.">
        <Syntax text="Application.onload(obj:nexacro.Application,e:nexacro.LoadEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="LoadEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onloadforms" group="" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This event occurs after all the forms connected to a ChildFrame are loaded.">
        <Syntax text="Application.onloadforms(obj:nexacro.Application,e:nexacro.LoadEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="LoadEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onloadingappvariables" group="" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This event occurs after all the defined objects are created in the AppVariables field of an application.">
        <Syntax text="Application.onloadingappvariables(obj:nexacro.Application,e:nexacro.LoadEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="LoadEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onnotification" group="" deprecated="false" unused="false" requirement="Android NRE,iOS/iPadOS NRE" description="This event occurs when a mobile device receives a notification about Nexacro.">
        <Syntax text="Application.onnotification(obj:nexacro.Application,e:nexacro.NotificationEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="NotificationEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
    </EventHandlerInfo>
  </Object>
</MetaInfo>
