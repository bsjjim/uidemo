<?xml version="1.0" encoding="UTF-8"?>
<MetaInfo version="2.0">
  <Object id="nexacro.SimpleComponent">
    <ObjectInfo finalclass="true" inheritance="nexacro.Component" classname="nexacro.SimpleComponent" shorttypename="" csstypename="SimpleComponent" csscontrolname="SimpleComponentControl" group="Component" subgroup="Component ( default )" csspseudo="" container="false" composite="false" tabstop="false" cssstyle="false" contents="false" formats="false" contentseditor="" defaultwidth="" defaultheight="" registration="deny" edittype="" useinitvalue="false" popup="false" edittypecomponent="" dblclickevent="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="" />
    <PropertyInfo>
      <Property name="accessibilityaction" group="Accessibility" subgroup="" refreshinfo="" edittype="String" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="" csspropertyname="" normalpropertyname="accessibilityaction" />
      <Property name="accessibilitydesclevel" group="Accessibility" subgroup="" refreshinfo="" edittype="Enum" defaultvalue="&quot;all&quot;" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="DescLevel" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="" csspropertyname="" normalpropertyname="accessibilitydesclevel" />
      <Property name="accessibilitydescription" group="Accessibility" subgroup="" refreshinfo="" edittype="String" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="" csspropertyname="" normalpropertyname="accessibilitydescription" />
      <Property name="accessibilityenable" group="Accessibility" subgroup="" refreshinfo="" edittype="Boolean" defaultvalue="true" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="" csspropertyname="" normalpropertyname="accessibilityenable" />
      <Property name="accessibilitylabel" group="Accessibility" subgroup="" refreshinfo="" edittype="String" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="" csspropertyname="" normalpropertyname="accessibilitylabel" />
      <Property name="accessibilityrole" group="Accessibility" subgroup="" refreshinfo="" edittype="Enum" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="Role" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="" csspropertyname="" normalpropertyname="accessibilityrole" />
      <Property name="background" group="Style" subgroup="background" refreshinfo="" edittype="" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to set a background of a component." csspropertyname="background" normalpropertyname="background" />
      <Property name="borderRadius" group="Style" subgroup="border-radius" refreshinfo="" edittype="String" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="Pixel" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to set the shape of the corners of a SimpleComponent." csspropertyname="border-radius" normalpropertyname="borderRadius" />
      <Property name="bottom" group="Position" subgroup="position" refreshinfo="" edittype="PositionBase" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is a property to set the coordinate of the bottomof a newly created SimpleComponent." csspropertyname="" normalpropertyname="bottom" />
      <Property name="boxShadow" group="Style" subgroup="box-shadow" refreshinfo="" edittype="" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to set the shadow effect of an SimpleComponent." csspropertyname="box-shadow" normalpropertyname="boxShadow" />
      <Property name="color" group="Style" subgroup="color" refreshinfo="" edittype="Enum" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="NamedColor" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to set the color of the text displayed in an SimpleComponent." csspropertyname="color" normalpropertyname="color" />
      <Property name="cssclass" group="Appearance" subgroup="" refreshinfo="" edittype="CssClass" defaultvalue="" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Property to designate a style of SimpleComponent with class of CSS." csspropertyname="" normalpropertyname="cssclass" />
      <Property name="cursor" group="Style" subgroup="cursor" refreshinfo="" edittype="Enum" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="CursorType" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to set the type of a mouse pointer that appears when the mouse cursor is located in an SimpleComponent." csspropertyname="cursor" normalpropertyname="cursor" />
      <Property name="enable" group="Action" subgroup="" refreshinfo="" edittype="Boolean" defaultvalue="true" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to determine whether to enable an SimpleComponent." csspropertyname="" normalpropertyname="enable" />
      <Property name="enableevent" group="Action" subgroup="" refreshinfo="" edittype="Boolean" defaultvalue="true" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Property to determine whether to generate Event of SimpleComponent." csspropertyname="" normalpropertyname="enableevent" />
      <Property name="expr" group="Action" subgroup="" refreshinfo="" edittype="String" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="It is a property to designate text of an SimpleComponent as a nmeric formula." csspropertyname="" normalpropertyname="expr" />
      <Property name="font" group="Style" subgroup="font" refreshinfo="" edittype="Font" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="FontSize2" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="SimpleComponent에서 사용하는 폰트를 설정하는 속성입니다." csspropertyname="font" normalpropertyname="font" />
      <Property name="height" group="Position" subgroup="position" refreshinfo="" edittype="Position" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="PixelPercent" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="SimpleComponent height of the newly created." csspropertyname="" normalpropertyname="height" />
      <Property name="hotkey" group="Action" subgroup="" refreshinfo="" edittype="HotKey" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="HotKeyModifier" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is a property to set hot keys for default actions of SimpleComponents." csspropertyname="" normalpropertyname="hotkey" />
      <Property name="id" group="Information" subgroup="" refreshinfo="" edittype="ID" readonly="true" initonly="true" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="true" mandatory="true" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="SimpleComponent의 고유 식별자를 설정하는 속성입니다." csspropertyname="" normalpropertyname="id" />
      <Property name="initvalueid" group="Information" subgroup="" refreshinfo="" edittype="InitvalueID" readonly="false" initonly="true" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="" csspropertyname="" normalpropertyname="initvalueid" />
      <Property name="left" group="Position" subgroup="position" refreshinfo="" edittype="Position" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="PixelPercent" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="SimpleComponent left coordinate of the newly created." csspropertyname="" normalpropertyname="left" />
      <Property name="letterSpacing" group="Style" subgroup="letter-spacing" refreshinfo="" edittype="" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="Pixel" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to set the spacing between characters (kerning) displayed in an SimpleComponent." csspropertyname="letter-spacing" normalpropertyname="letterSpacing" />
      <Property name="maxheight" group="Position" subgroup="" refreshinfo="" edittype="" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="" csspropertyname="" normalpropertyname="maxheight" />
      <Property name="maxwidth" group="Position" subgroup="" refreshinfo="" edittype="" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="" description="" csspropertyname="" normalpropertyname="maxwidth" />
      <Property name="minheight" group="Position" subgroup="" refreshinfo="" edittype="" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="" description="" csspropertyname="" normalpropertyname="minheight" />
      <Property name="minwidth" group="Position" subgroup="" refreshinfo="" edittype="" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="" description="" csspropertyname="" normalpropertyname="minwidth" />
      <Property name="name" group="Information" subgroup="" refreshinfo="" edittype="String" readonly="false" initonly="false" hidden="true" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It designates names of components." csspropertyname="" normalpropertyname="name" />
      <Property name="border" group="Style" subgroup="border" refreshinfo="" edittype="String" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to set the border of an SimpleComponent." csspropertyname="-nexa-border" normalpropertyname="border" />
      <Property name="edge" group="Style" subgroup="-nexa-edge" refreshinfo="" edittype="String" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="SimpleComponent의 테두리 안쪽에 edge 이미지를 설정하는 속성입니다." csspropertyname="-nexa-edge" normalpropertyname="edge" />
      <Property name="padding" group="Style" subgroup="padding" refreshinfo="" edittype="String" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to set the padding, an inner margin, of an SimpleComponent." csspropertyname="-nexa-padding" normalpropertyname="padding" />
      <Property name="textAlign" group="Style" subgroup="-nexa-text-align" refreshinfo="" edittype="Enum" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="HorizontalAlign" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="SimpleComponent 에 표시되는 텍스트 또는 컨텐츠의 가로 정렬 방식을 설정하는 속성입니다." csspropertyname="-nexa-text-align" normalpropertyname="textAlign" />
      <Property name="textDecoration" group="Style" subgroup="text-decoration" refreshinfo="" edittype="MultiEnum" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="TextDecorationLine" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="SimpleComponent 에 표시되는 텍스트에 적용할 효과를 설정하는 속성입니다." csspropertyname="-nexa-text-decoration" normalpropertyname="textDecoration" />
      <Property name="verticalAlign" group="Style" subgroup="-nexa-vertical-align" refreshinfo="" edittype="Enum" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="VerticalAlign" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="SimpleComponent에 표시되는 텍스트 또는 컨텐츠의 세로 정렬 방식을 설정하는 속성입니다." csspropertyname="-nexa-vertical-align" normalpropertyname="verticalAlign" />
      <Property name="wordWrap" group="Style" subgroup="-nexa-word-wrap" refreshinfo="" edittype="Enum" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="WordWrapType" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="SimpleComponent 에 표시되는 텍스트가 출력영역보다 길 경우 자동으로 줄바꿈 되도록 설정하는 속성입니다." csspropertyname="-nexa-word-wrap" normalpropertyname="wordWrap" />
      <Property name="opacity" group="Style" subgroup="opacity" refreshinfo="" edittype="Number" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to set the opacity of an SimpleComponent." csspropertyname="opacity" normalpropertyname="opacity" />
      <Property name="parent" group="Hidden" subgroup="" refreshinfo="" edittype="Object" readonly="true" initonly="false" hidden="true" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It indicates the parent object of a component." csspropertyname="" normalpropertyname="parent" />
      <Property name="positionstep" group="Position" subgroup="position" refreshinfo="" edittype="Number" defaultvalue="0" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="PositionStep" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Property to designate which Step belonging Form, Div, Tabpage, or PopupDiv belong to when they use Step function." csspropertyname="" normalpropertyname="positionstep" />
      <Property name="right" group="Position" subgroup="position" refreshinfo="" edittype="Position" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="PixelPercent" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="SimpleComponent right coordinate of the newly created." csspropertyname="" normalpropertyname="right" />
      <Property name="rtl" group="" subgroup="" refreshinfo="" edittype="" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="true" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="" description="" csspropertyname="" normalpropertyname="rtl" />
      <Property name="taborder" group="Action" subgroup="" refreshinfo="" edittype="Number" defaultvalue="" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Property to designate movement order of focus by Tab key which Component has in Form." csspropertyname="" normalpropertyname="taborder" />
      <Property name="tabstop" group="Action" subgroup="" refreshinfo="" edittype="Boolean" defaultvalue="true" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Property to designate whether to receive focus by Tab key." csspropertyname="" normalpropertyname="tabstop" />
      <Property name="text" group="Appearance" subgroup="" refreshinfo="" edittype="String" defaultvalue="" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="It is Property to designate a value to show in Component." csspropertyname="" normalpropertyname="text" />
      <Property name="tooltiptext" group="Action" subgroup="" refreshinfo="" edittype="MultilineString" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Property to designate Tool Tip to show when a mouse pointer is on Component." csspropertyname="" normalpropertyname="tooltiptext" />
      <Property name="tooltiptype" group="Action" subgroup="" refreshinfo="" edittype="Enum" defaultvalue="default" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="TooltipType" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Property to designate a method to output Tool tip." csspropertyname="" normalpropertyname="tooltiptype" />
      <Property name="top" group="Position" subgroup="position" refreshinfo="" edittype="Position" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="PixelPercent" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="SimpleComponent top coordinate of the newly created." csspropertyname="" normalpropertyname="top" />
      <Property name="visible" group="Action" subgroup="" refreshinfo="" edittype="Boolean" defaultvalue="true" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Property to designate whether to show SimpleComponent in screen." csspropertyname="" normalpropertyname="visible" />
      <Property name="width" group="Position" subgroup="position" refreshinfo="" edittype="Position" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="PixelPercent" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="SimpleComponent width of the newly created." csspropertyname="" normalpropertyname="width" />
      <Property name="wordSpacing" group="Style" subgroup="word-spacing" refreshinfo="" edittype="" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="Pixel" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to set the spacing between words displayed in an SimpleComponent." csspropertyname="word-spacing" normalpropertyname="wordSpacing" />
    </PropertyInfo>
    <CSSInfo>
      <PropertyInfo>
        <Property name="background" group="Style" subgroup="background" edittype="" readonly="false" initonly="false" hidden="false" control="false" style="true" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to set a background of a component." csspropertyname="background" normalpropertyname="background" />
        <Property name="border-radius" group="Style" subgroup="border-radius" edittype="String" defaultvalue="0px" readonly="false" initonly="false" hidden="false" control="false" style="true" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" unitinfo="Pixel" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to set the shape of the corners of a SimpleComponent." csspropertyname="border-radius" normalpropertyname="borderRadius" />
        <Property name="box-shadow" group="Style" subgroup="box-shadow" edittype="" defaultvalue="none" readonly="false" initonly="false" hidden="false" control="false" style="true" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to set the shadow effect of an SimpleComponent." csspropertyname="box-shadow" normalpropertyname="boxShadow" />
        <Property name="color" group="Style" subgroup="color" edittype="Enum" readonly="false" initonly="false" hidden="false" control="false" style="true" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="NamedColor" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to set the color of the text displayed in an SimpleComponent." csspropertyname="color" normalpropertyname="color" />
        <Property name="cursor" group="Style" subgroup="cursor" edittype="Enum" defaultvalue="auto" readonly="false" initonly="false" hidden="false" control="false" style="true" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="CursorType" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to set the type of a mouse pointer that appears when the mouse cursor is located in an SimpleComponent." csspropertyname="cursor" normalpropertyname="cursor" />
        <Property name="font" group="Style" subgroup="font" edittype="Font" readonly="false" initonly="false" hidden="false" control="false" style="true" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" unitinfo="FontSize2" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="SimpleComponent에서 사용하는 폰트를 설정하는 속성입니다." csspropertyname="font" normalpropertyname="font" />
        <Property name="letter-spacing" group="Style" subgroup="letter-spacing" edittype="" readonly="false" initonly="false" hidden="false" control="false" style="true" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" unitinfo="Pixel" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to set the spacing between characters (kerning) displayed in an SimpleComponent." csspropertyname="letter-spacing" normalpropertyname="letterSpacing" />
        <Property name="-nexa-border" group="Style" subgroup="border" edittype="String" readonly="false" initonly="false" hidden="false" control="false" style="true" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to set the border of an SimpleComponent." csspropertyname="-nexa-border" normalpropertyname="border" />
        <Property name="-nexa-edge" group="Style" subgroup="-nexa-edge" edittype="String" readonly="false" initonly="false" hidden="false" control="false" style="true" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="SimpleComponent의 테두리 안쪽에 edge 이미지를 설정하는 속성입니다." csspropertyname="-nexa-edge" normalpropertyname="edge" />
        <Property name="-nexa-padding" group="Style" subgroup="padding" edittype="String" defaultvalue="0px 0px 0px 0px" readonly="false" initonly="false" hidden="false" control="false" style="true" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to set the padding, an inner margin, of an SimpleComponent." csspropertyname="-nexa-padding" normalpropertyname="padding" />
        <Property name="-nexa-rtl-background-image" group="Style" subgroup="" edittype="String" readonly="false" initonly="false" hidden="false" control="false" style="true" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This property is used to set an image that will be displayed as the background of a SimpleComponent. This property is applicable when the rtl property of the SimpleComponent is set to &quot;true&quot;." csspropertyname="-nexa-rtl-background-image" normalpropertyname="" />
        <Property name="-nexa-rtl-edge-image" group="Style" subgroup="" edittype="String" readonly="false" initonly="false" hidden="false" control="false" style="true" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This property is used to set an edge image that is displayed inside the border of a SimpleComponent. This property is applicable when the rtl property of the SimpleComponent is set to &quot;true&quot;." csspropertyname="-nexa-rtl-edge-image" normalpropertyname="" />
        <Property name="-nexa-text-align" group="Style" subgroup="-nexa-text-align" edittype="Enum" defaultvalue="left" readonly="false" initonly="false" hidden="false" control="false" style="true" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="HorizontalAlign" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="SimpleComponent 에 표시되는 텍스트 또는 컨텐츠의 가로 정렬 방식을 설정하는 속성입니다." csspropertyname="-nexa-text-align" normalpropertyname="textAlign" />
        <Property name="-nexa-text-decoration" group="Style" subgroup="text-decoration" edittype="MultiEnum" defaultvalue="none" readonly="false" initonly="false" hidden="false" control="false" style="true" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="TextDecorationLine" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="SimpleComponent 에 표시되는 텍스트에 적용할 효과를 설정하는 속성입니다." csspropertyname="-nexa-text-decoration" normalpropertyname="textDecoration" />
        <Property name="-nexa-vertical-align" group="Style" subgroup="-nexa-vertical-align" edittype="Enum" defaultvalue="middle" readonly="false" initonly="false" hidden="false" control="false" style="true" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="VerticalAlign" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="SimpleComponent에 표시되는 텍스트 또는 컨텐츠의 세로 정렬 방식을 설정하는 속성입니다." csspropertyname="-nexa-vertical-align" normalpropertyname="verticalAlign" />
        <Property name="-nexa-word-wrap" group="Style" subgroup="-nexa-word-wrap" edittype="Enum" defaultvalue="none" readonly="false" initonly="false" hidden="false" control="false" style="true" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="WordWrapType" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="SimpleComponent 에 표시되는 텍스트가 출력영역보다 길 경우 자동으로 줄바꿈 되도록 설정하는 속성입니다." csspropertyname="-nexa-word-wrap" normalpropertyname="wordWrap" />
        <Property name="opacity" group="Style" subgroup="opacity" edittype="Number" readonly="false" initonly="false" hidden="false" control="false" style="true" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to set the opacity of an SimpleComponent." csspropertyname="opacity" normalpropertyname="opacity" />
        <Property name="word-spacing" group="Style" subgroup="word-spacing" edittype="" readonly="false" initonly="false" hidden="false" control="false" style="true" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" unitinfo="Pixel" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="This property is used to set the spacing between words displayed in an SimpleComponent." csspropertyname="word-spacing" normalpropertyname="wordSpacing" />
      </PropertyInfo>
    </CSSInfo>
    <StatusInfo />
    <ControlInfo />
    <MethodInfo>
      <Method name="addEvent" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method is used to declare a certain event and then add it to a SimpleComponent.">
        <Syntax text="SimpleComponent.addEvent( strEventID )">
          <Return type="Boolean" description="This method will return &quot;true&quot; if an event is added successfully.&#xA;&#xA;This method will return &quot;false&quot; if it fails to add an event or you specify the ID of an event that has been declared already." />
          <Arguments>
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="This is a string that represents the ID of an event to add to the SimpleComponent." />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="addEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It adds an event handler function.">
        <Syntax text="SimpleComponent.addEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Integer" description="If successful, it returns the changed index, otherwise, it returns -1." />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="Event handler function" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="Target scope" />
            <Argument name="strEventID" type="String" in="true" out="true" option="true" variable="true" description="Event ID" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="addEventHandlerLookup" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It adds an event handler as a result searched with a designated event ID.">
        <Syntax text="addEventHandlerLookup( strEventID, strFunc, objTarget )">
          <Return type="Integer" description="If successful, it returns an added index value. Otherwise, it returns -1." />
          <Arguments>
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="target scope" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="Event ID" />
            <Argument name="strFunc" type="String" in="false" out="false" option="false" variable="false" description="이벤트 발생 시 수행될 핸들러 함수의 이름을 문자열로 설정합니다." />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="bringToFront" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It is method to change the order to draw Component to the first position of same level Components.">
        <Syntax text="SimpleComponent.bringToFront()">
          <Return type="" description="" />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="bringToPrev" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It is method to change the order to draw Component to the next front position of same level Components.">
        <Syntax text="SimpleComponent.bringToPrev()">
          <Return type="" description="" />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="clearEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It clears all set event handler functions.">
        <Syntax text="clearEventHandler( strEventID )">
          <Return type="Integer" description="It returns the number of deleted event handler functions." />
          <Arguments>
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="Event ID" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="destroy" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="This method is used to delete a component that is dynamically created through a script.">
        <Syntax text="SimpleComponent.destroy()">
          <Return type="Boolean" description="It returns whether deletion was successful or not." />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="findEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It finds a designated event handler function and returns the index.">
        <Syntax text="findEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Integer" description="Index of a designated function" />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="Event handler function object to find" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="Target scope" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="Event ID" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="getDisplayText" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method returns the text displayed in a SimpleComponent.">
        <Syntax text="SimpleComponent.getDisplayText()">
          <Return type="String" description="This method returns the text displayed in the SimpleComponent." />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="getEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It is a method to return the specified event handler function.">
        <Syntax text="getEventHandler( strEventID, nIdx )">
          <Return type="Object" description="It returns the object of the event handler function. If the specified index location is not valid, it returns &quot;null.&quot;" />
          <Arguments>
            <Argument name="nIdx" type="Integer" in="false" out="false" option="false" variable="false" description="Index of the event handler function (Zero-based index)" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="Event ID" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="getFocus" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It returns a component which has focus.">
        <Syntax text="SimpleComponent.getFocus()">
          <Return type="Object" description="It returns a component if the component which has focus exists in a designated form.&#xD;&#xA;If not, it returns 'null'." />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="getOffsetBottom" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It gets pixel values of the bottom property among SimpleComponent location information.">
        <Syntax text="SimpleComponent.getOffsetBottom();">
          <Return type="Number" description="It returns the value in pixels." />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="getOffsetHeight" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It gets pixel values of the height property among SimpleComponent location information.">
        <Syntax text="SimpleComponent.getOffsetHeight();">
          <Return type="Number" description="It returns the value in pixels" />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="getOffsetLeft" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It gets pixel values of the left property among SimpleComponent location information.">
        <Syntax text="SimpleComponent.getOffsetLeft();">
          <Return type="Number" description="It returns the value in pixels." />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="getOffsetRight" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It gets pixel values of the right property among SimpleComponent location information.">
        <Syntax text="SimpleComponent.getOffsetRight();">
          <Return type="Number" description="It returns the value in pixels." />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="getOffsetTop" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It gets pixel values of the top property among SimpleComponent location information.">
        <Syntax text="SimpleComponent.getOffsetTop();">
          <Return type="Number" description="It returns the value in pixels." />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="getOffsetWidth" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It gets pixel values of the width property among SimpleComponent location information.">
        <Syntax text="SimpleComponent.getOffsetWidth();">
          <Return type="Number" description="It returns the value in pixels." />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="getPixelBottom" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="IIt gets pixel values of the bottom property among SimpleComponent location information.">
        <Syntax text="SimpleComponent.getPixelBottom();">
          <Return type="Number" description="It returns the value in pixels." />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="getPixelHeight" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It gets pixel values of the height property among SimpleComponent location information.">
        <Syntax text="SimpleComponent.getPixelHeight();">
          <Return type="Number" description="It returns the value in pixels." />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="getPixelLeft" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It gets pixel values of the left property among SimpleComponent location information.">
        <Syntax text="SimpleComponent.getPixelLeft();">
          <Return type="Number" description="It returns the value in pixels." />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="getPixelRight" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It gets pixel values of the right property among SimpleComponent location information.">
        <Syntax text="SimpleComponent.getPixelRight();">
          <Return type="Number" description="It returns the value in pixels." />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="getPixelTop" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It gets pixel values of the top property among SimpleComponent location information.">
        <Syntax text="SimpleComponent.getPixelTop();">
          <Return type="Number" description="It returns the value in pixels." />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="getPixelWidth" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It gets pixel values of the width property among SimpleComponent location information.">
        <Syntax text="SimpleComponent.getPixelWidth();">
          <Return type="Number" description="It returns the value in pixels." />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="init" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="">
        <Syntax text="">
          <Return type="" description="" />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="insertEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method is used to add a handler to a certain event of a SimpleComponent at a specified position.">
        <Syntax text="SimpleComponent.insertEventHandler( strEventID, nIndex, objFunc, objTarget )">
          <Return type="Number" description="It returns the index of the handler that has been inserted to the event by this method.&#xA;If the same handler already exists, it will return the index of the existing handler.&#xA;&#xA;If this method fails to insert a handler successfully, it will return -1." />
          <Arguments>
            <Argument name="nIndex" type="Number" in="false" out="false" option="false" variable="false" description="This is an index number of the position at which the handler will be added.&#xA;&#xA;If you specify -1, the handler will be added at the end.&#xA;If you specify a value bigger than the number of handlers defined in the event, the handler will be added at the end.&#xA;If you specify a NaN value, the values will turn to 0 in compliance with ECMA's conversion rule." />
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="A handler function to add" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="The scope in which the handler function is valid" />
            <Argument name="strEventID" type="String" in="true" out="true" option="true" variable="true" description="The ID of an event that the handler will be inserted to" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="move" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It moves a component into a specific location in specific size.">
        <Syntax text="SimpleComponent.move( nLeft, nTop [, nWidth, nHeight [, nRight, nBottom]] )">
          <Return type="" description="" />
          <Arguments>
            <Argument name="nBottom" type="Integer" in="false" out="false" option="false" variable="false" description="bottom coordinate to locate a component." />
            <Argument name="nHeight" type="Integer" in="false" out="false" option="false" variable="false" description="height of a component" />
            <Argument name="nLeft" type="Integer" in="false" out="false" option="false" variable="false" description="left coordinate to locate a component." />
            <Argument name="nRight" type="Integer" in="false" out="false" option="false" variable="false" description="right coordinate to locate a component." />
            <Argument name="nTop" type="Integer" in="false" out="false" option="false" variable="false" description="top coordinate to locate a component." />
            <Argument name="nWidth" type="Integer" in="false" out="false" option="false" variable="false" description="width of a component" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="moveToNext" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It changes the order to draw a component to the next back position based on a component given as an argument.">
        <Syntax text="SimpleComponent.moveToNext( objComp )&#xA;SimpleComponent.moveToNext( strComp )">
          <Return type="" description="" />
          <Arguments>
            <Argument name="objComp" type="Object" in="false" out="false" option="false" variable="false" description="It is a target component object." />
            <Argument name="strComp" type="String" in="false" out="false" option="false" variable="false" description="It is a character string value of the target component ID" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="moveToPrev" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It changes the order to draw a component to the prior front position based on a component given as an argument.">
        <Syntax text="SimpleComponent.moveToPrev( objComp )&#xA;SimpleComponent.moveToPrev( strComp )">
          <Return type="" description="" />
          <Arguments>
            <Argument name="objComp" type="Object" in="false" out="false" option="false" variable="false" description="It is a target component object." />
            <Argument name="strComp" type="String" in="false" out="false" option="false" variable="false" description="It is a character string value of the target component ID" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="removeEvent" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="This method is used to remove a certain event that is declared in a SimpleComponent.">
        <Syntax text="SimpleComponent.removeEvent( strEventID )">
          <Return type="Boolean" description="This method will return &quot;true&quot; if an event is removed successfully.&#xA;&#xA;This method will return &quot;false&quot; if it fails to remove an event or you specify the ID of an event that has not been declared." />
          <Arguments>
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="This is a string that represents the ID of an event to remove from the SimpleComponent." />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="removeEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It removes a designated index or an event handler function.">
        <Syntax text="SimpleComponent.removeEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Integer" description="It returns the number of removed event handler functions(if successful, 1. if fails, 0)" />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="event handler function item to remove" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="target scope" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="event ID" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="removeEventHandlerLookup" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It removes an event handler lookup with a designated event ID.">
        <Syntax text="removeEventHandlerLookup( strEventID, strFunc, objTarget )">
          <Return type="Integer" description="It returns the number of deleted event handler functions. (if is successful, 1. if it fails, 0)" />
          <Arguments>
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="Target scope" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="Event ID" />
            <Argument name="strFunc" type="String" in="false" out="false" option="false" variable="false" description="제거할 핸들러 함수의 이름을 문자열로 설정합니다." />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="resize" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It is Method to change size of SimpleComponent.">
        <Syntax text="SimpleComponent.resize( nWidth, nHeight )">
          <Return type="" description="" />
          <Arguments>
            <Argument name="nHeight" type="Integer" in="false" out="false" option="false" variable="false" description="It is length to change." />
            <Argument name="nWidth" type="Integer" in="false" out="false" option="false" variable="false" description="It is length to change." />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="sendToBack" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It is method to change the order to draw Component to the last position of same level Components.">
        <Syntax text="SimpleComponent.sendToBack()">
          <Return type="" description="" />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="sendToNext" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It is method to change the order to draw Component to the next back position of same level Components.">
        <Syntax text="SimpleComponent.sendToNext()">
          <Return type="" description="" />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="setEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It changes an event handler function.">
        <Syntax text="setEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Integer" description="If it is success, it returns the changed index. Otherwise, it returns -1." />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="Event handler function" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="target scope" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="Event ID" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="setEventHandlerLookup" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It sets an event handler lookup with a designated event ID.">
        <Syntax text="setEventHandlerLookup( strEventID, strFunc, objTarget )">
          <Return type="Integer" description="If successful, it returns the changed index, otherwise, it returns -1." />
          <Arguments>
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="target scope" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="Event ID" />
            <Argument name="strFunc" type="Object" in="false" out="false" option="false" variable="false" description="Event handler function" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="setFocus" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It gives a focus to an SimpleComponent.">
        <Syntax text="SimpleComponent.setFocus( [bMoveScroll] )">
          <Return type="Object" description="It returns a component which has prior focus.&#xD;&#xA;If there is no component which has prior focus, or if the method fails, it returns 'null'." />
          <Arguments>
            <Argument name="bMoveScroll" type="Boolean" in="false" out="false" option="false" variable="false" description="Whether to set scroll again based on a relevant component after SetFocus&#xA;[Default : true]" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="setOffsetBottom" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="Set the value of the bottom relative to the left, top value of the SimpleComponent parent object.">
        <Syntax text="SimpleComponent.setOffsetBottom( nBottom );">
          <Return type="" description="" />
          <Arguments>
            <Argument name="nBottom" type="Number" in="false" out="false" option="false" variable="false" description="numeric value" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="setOffsetHeight" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="Set the value of the height relative to the left, top value of the SimpleComponent parent object.">
        <Syntax text="SimpleComponent.setOffsetHeight( nHeight );">
          <Return type="" description="" />
          <Arguments>
            <Argument name="nHeight" type="Number" in="false" out="false" option="false" variable="false" description="numeric value" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="setOffsetLeft" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="Set the value of the left relative to the left, top value of the SimpleComponent parent object.">
        <Syntax text="SimpleComponent.setOffsetLeft( nLeft );">
          <Return type="" description="" />
          <Arguments>
            <Argument name="nLeft" type="Number" in="false" out="false" option="false" variable="false" description="numeric value" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="setOffsetRight" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="Set the value of the right relative to the left, top value of the SimpleComponent parent object.">
        <Syntax text="SimpleComponent.setOffsetRight( nRight );">
          <Return type="" description="" />
          <Arguments>
            <Argument name="nRight" type="Number" in="false" out="false" option="false" variable="false" description="numeric value" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="setOffsetTop" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="Set the value of the top relative to the left, top value of the SimpleComponent parent object.">
        <Syntax text="SimpleComponent.setOffsetTop( nTop );">
          <Return type="" description="" />
          <Arguments>
            <Argument name="nTop" type="Number" in="false" out="false" option="false" variable="false" description="numeric value" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="setOffsetWidth" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="Set the value of the width relative to the left, top value of the SimpleComponent parent object.">
        <Syntax text="SimpleComponent.setOffsetWidth( nWidth );">
          <Return type="" description="" />
          <Arguments>
            <Argument name="nWidth" type="Object" in="false" out="false" option="false" variable="false" description="The numeric values​​." />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="show" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="" description="It is Method to actually show SimpleComponent which is dynamically generated in Script.">
        <Syntax text="SimpleComponent.show()">
          <Return type="" description="" />
          <Arguments />
        </Syntax>
      </Method>
    </MethodInfo>
    <EventHandlerInfo>
      <EventHandler name="onclick" group="Event" deprecated="false" unused="false" requirement="" description="SimpleComponent 영역 내에서 마우스 왼쪽버튼을 클릭했을 때 발생하는 이벤트입니다.">
        <Syntax text="SimpleComponent.onclick(obj:nexacro.SimpleComponent,e:nexacro.ClickEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="ClickEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="oncontextmenu" group="" deprecated="false" unused="false" requirement="" description="">
        <Syntax text="SimpleComponent.oncontextmenu(obj:nexacro.SimpleComponent,e:nexacro.);">
          <Return type="" description="" />
          <Arguments />
        </Syntax>
      </EventHandler>
      <EventHandler name="ondblclick" group="Event" deprecated="false" unused="false" requirement="" description="SimpleComponent 영역 내에서 마우스 왼쪽버튼을 더블클릭 했을 때 발생하는 이벤트입니다.">
        <Syntax text="SimpleComponent.ondblclick(obj:nexacro.SimpleComponent,e:nexacro.MouseEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="MouseEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="ondrag" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Event to occur when drag situation occurs by a mouse in Component area.">
        <Syntax text="SimpleComponent.ondrag(obj:nexacro.SimpleComponent,e:nexacro.DragEventInfo);">
          <Return type="Boolean" description="In case of false, drag function shall not be operational. &#xA;If true is returned, Event shall not occur in upper Component.&#xA;Default : false" />
          <Arguments>
            <Argument name="e" type="DragEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="ondragenter" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Event to occur when dragged Component enters into Component area.">
        <Syntax text="SimpleComponent.ondragenter(obj:nexacro.SimpleComponent,e:nexacro.DragEventInfo);">
          <Return type="Boolean" description="Whether to treat Event. If true is returned, Event shall not occur in upper Component.&#xA;Default : false" />
          <Arguments>
            <Argument name="e" type="DragEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="ondragleave" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Event to occur when dragged Component goes out of Component area.">
        <Syntax text="SimpleComponent.ondragleave(obj:nexacro.SimpleComponent,e:nexacro.DragEventInfo);">
          <Return type="Boolean" description="Whether to treat Event. If true is returned, Event shall not occur in upper Component.&#xA;default : false" />
          <Arguments>
            <Argument name="e" type="DragEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="ondragmove" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Event to occur when a dragged mouse moves in Component area.">
        <Syntax text="SimpleComponent.ondragmove(obj:nexacro.SimpleComponent,e:nexacro.DragEventInfo);">
          <Return type="Boolean" description="Whether to treat Event. If true is returned, Event shall not occur in upper Component.&#xD;&#xA;default: false" />
          <Arguments>
            <Argument name="e" type="DragEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="ondrop" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It occurs when you drop down a dragged component into the component area.">
        <Syntax text="SimpleComponent.ondrop(obj:nexacro.SimpleComponent,e:nexacro.DragEventInfo);">
          <Return type="Boolean" description="Whether to apply the event. If true is returned, the event shall not occur in the upper level component.&#xD;&#xA;default : false" />
          <Arguments>
            <Argument name="e" type="DragEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="oninput" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="SimpleComponent 에 키보드로 값이 입력될 때 발생하는 이벤트 입니다.">
        <Syntax text="SimpleComponent.oninput(obj:nexacro.SimpleComponent,e:nexacro.InputEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="InputEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onkeydown" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Event to occur when a Key of a keyboard is pressed while Focus is in SimpleComponent.">
        <Syntax text="SimpleComponent.onkeydown(obj:nexacro.SimpleComponent,e:nexacro.KeyEventInfo);">
          <Return type="Boolean" description="Whether to treat Event. If true is returned, onkeydown Event shall not occur in upper Component.&#xA;default : false" />
          <Arguments>
            <Argument name="e" type="KeyEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onkeyup" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It occurs when a keyboard key is pressed and released while an SimpleComponent has focus.">
        <Syntax text="SimpleComponent.onkeyup(obj:nexacro.SimpleComponent,e:nexacro.KeyEventInfo);">
          <Return type="Boolean" description="Whether to process the event. If true is returned, the onkeyup event shall not occur in an upper level component.&#xD;&#xA;default : false" />
          <Arguments>
            <Argument name="e" type="KeyEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onkillfocus" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Event to occur when SimpleComponent in which Focus is located loses Focus.">
        <Syntax text="SimpleComponent.onkillfocus(obj:nexacro.SimpleComponent,e:nexacro.KillFocusEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="KillFocusEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onlbuttondown" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Event to occur when Mouse Left Button Down occurs in SimpleComponent.">
        <Syntax text="SimpleComponent.onlbuttondown(obj:nexacro.SimpleComponent,e:nexacro.MouseEventInfo);">
          <Return type="Boolean" description="Whether to treat Event. If true is returned, onlbuttondown Event shall not occur in upper Component.&#xD;&#xA;Default: false" />
          <Arguments>
            <Argument name="e" type="MouseEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onlbuttonup" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Event to occur when Mouse Left Button Up occurs in SimpleComponent.">
        <Syntax text="SimpleComponent.onlbuttonup(obj:nexacro.SimpleComponent,e:nexacro.MouseEventInfo);">
          <Return type="Boolean" description="Whether to treat Event. If true is returned, onlbuttonup Event shall not occur in upper Component.&#xD;&#xA;default: false" />
          <Arguments>
            <Argument name="e" type="MouseEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onmousedown" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Event to occur when the other Buttons are pressed except for Left Button/Right Button of a mouse.">
        <Syntax text="SimpleComponent.onmousedown(obj:nexacro.SimpleComponent,e:nexacro.MouseEventInfo);">
          <Return type="Boolean" description="Whether to treat Event. If true is returned, onmousedown Event shall not occur in upper Component.&#xD;&#xA;default: false" />
          <Arguments>
            <Argument name="e" type="MouseEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onmouseenter" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Event to occur when a cursor of a mouse enters into SimpleComponent area.">
        <Syntax text="SimpleComponent.onmouseenter(obj:nexacro.SimpleComponent,e:nexacro.MouseEventInfo);">
          <Return type="Boolean" description="Whether to treat Event. If true is returned, onmouseenter Event shall not occur in upper Component.&#xD;&#xA;default: false" />
          <Arguments>
            <Argument name="e" type="MouseEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onmouseleave" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Event to occur when a cursor of a mouse goes out of SimpleComponent area.">
        <Syntax text="SimpleComponent.onmouseleave(obj:nexacro.SimpleComponent,e:nexacro.MouseEventInfo);">
          <Return type="Boolean" description="Whether to treat Event. If true is returned, onmousleave Event shall not occur in upper Component.&#xD;&#xA;default: false" />
          <Arguments>
            <Argument name="e" type="MouseEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onmousemove" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Event to occur when a cursor of a mouse moves in SimpleComponent area.">
        <Syntax text="SimpleComponent.onmousemove(obj:nexacro.SimpleComponent,e:nexacro.MouseEventInfo);">
          <Return type="Boolean" description="Whether to treat Event. If true is returned, onmousemove Event shall not occur in upper Component.&#xD;&#xA;default: false" />
          <Arguments>
            <Argument name="e" type="MouseEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onmouseup" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Event to occur when the other Buttons are pressed and released except for Left Button/Right Button of a mouse.">
        <Syntax text="SimpleComponent.onmouseup(obj:nexacro.SimpleComponent,e:nexacro.MouseEventInfo);">
          <Return type="Boolean" description="Whether to treat Event. If true is returned, onmouseup Event shall not occur in upper Component.&#xD;&#xA;default: false" />
          <Arguments>
            <Argument name="e" type="MouseEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onmousewheel" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It occurs when you scroll your mouse wheel.">
        <Syntax text="SimpleComponent.onmousewheel(obj:nexacro.SimpleComponent,e:nexacro.MouseWheelEventInfo);">
          <Return type="Boolean" description="If true is returned, mouse scroll wheel and  bubbling stop. &#xD;&#xA;If false is returned, the onmousewheel event occurs in the generated component and is bubbled. If the generated component doesn't need the onmousewheel event, the event will be taken by an upper level component." />
          <Arguments>
            <Argument name="e" type="MouseWheelEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onmove" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Event to occur when SimpleComponent moves.">
        <Syntax text="SimpleComponent.onmove(obj:nexacro.SimpleComponent,e:nexacro.MoveEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="MoveEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onrbuttondown" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Event to occur when Mouse Right Button Down occurs in SimpleComponent.">
        <Syntax text="SimpleComponent.onrbuttondown(obj:nexacro.SimpleComponent,e:nexacro.MouseEventInfo);">
          <Return type="Boolean" description="Whether to treat Event. If true is returned, onrbuttondown Event shall not occur in upper Component.&#xD;&#xA;default: false" />
          <Arguments>
            <Argument name="e" type="MouseEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onrbuttonup" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Event to occur when Mouse Right Button Up occurs in SimpleComponent.">
        <Syntax text="SimpleComponent.onrbuttonup(obj:nexacro.SimpleComponent,e:nexacro.MouseEventInfo);">
          <Return type="Boolean" description="Whether to treat Event. If true is returned, onrbuttonup Event shall not occur in upper Component.&#xD;&#xA;default: false" />
          <Arguments>
            <Argument name="e" type="MouseEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onsetfocus" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Event to occur when Focus is set to SimpleComponent.">
        <Syntax text="SimpleComponent.onsetfocus(obj:nexacro.SimpleComponent,e:nexacro.SetFocusEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="SetFocusEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onsize" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It is Event to occur when SimpleComponent size is changed.">
        <Syntax text="SimpleComponent.onsize(obj:nexacro.SimpleComponent,e:nexacro.SizeEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="SizeEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="ontouchend" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It occurs at the time of touch end(up).">
        <Syntax text="SimpleComponent.ontouchend(obj:nexacro.SimpleComponent,e:nexacro.TouchEventInfo);">
          <Return type="Boolean" description="Whether to process the event or not. &#xD;&#xA;If true is returned, the event doesn't occur in an upper-level component. &#xD;&#xA;default : false" />
          <Arguments>
            <Argument name="e" type="TouchEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="ontouchmove" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It occurs during touches(move).">
        <Syntax text="SimpleComponent.ontouchmove(obj:nexacro.SimpleComponent,e:nexacro.TouchEventInfo);">
          <Return type="Boolean" description="Whether to process the event or not. &#xD;&#xA;If true is returned, the event doesn't occur in an upper-level component. &#xD;&#xA;default : false" />
          <Arguments>
            <Argument name="e" type="TouchEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="ontouchstart" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Opera,Windows NRE,Android NRE,iOS/iPadOS NRE" description="It occurs at the time of touch start(down)">
        <Syntax text="SimpleComponent.ontouchstart(obj:nexacro.SimpleComponent,e:nexacro.TouchEventInfo);">
          <Return type="Boolean" description="Whether to process the event or not. &#xD;&#xA;If true is returned, the event doesn't occur in an upper-level component. &#xD;&#xA;default : false" />
          <Arguments>
            <Argument name="e" type="TouchEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
    </EventHandlerInfo>
  </Object>
</MetaInfo>
