<?xml version="1.0" encoding="UTF-8"?>
<MetaInfo version="2.0">
  <Object id="nexacro.ExcelImportObject">
    <ObjectInfo finalclass="false" inheritance="" classname="nexacro.ExcelImportObject" shorttypename="ExcelImportObject" csstypename="" csscontrolname="" group="Object" subgroup="Object" csspseudo="" container="false" composite="false" tabstop="false" cssstyle="false" contents="false" formats="false" contentseditor="" defaultwidth="false" defaultheight="false" registration="allow" edittype="" useinitvalue="false" popup="false" edittypecomponent="" dblclickevent="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="Excelファイルの内容をDataSetにインポートするオブジェクトです。" />
    <PropertyInfo>
      <Property name="filefilter" group="Misc." subgroup="" refreshinfo="" edittype="String" defaultvalue="" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="Windows NRE" description="インポートするファイルを選択するファイル選択ウィンドウに適用されるファイル形式を設定するプロパティです。" csspropertyname="" normalpropertyname="filefilter" />
      <Property name="filefilterindex" group="Misc." subgroup="" refreshinfo="" edittype="Number" defaultvalue="0" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="Windows NRE" description="ファイル選択ダイアログにデフォルトで表示されるファイル形式をインデックス値に設定するプロパティです。" csspropertyname="" normalpropertyname="filefilterindex" />
      <Property name="importfilemode" group="Misc." subgroup="" refreshinfo="" edittype="Enum" defaultvalue="local" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="ImportFileMode" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="インポートするファイルの場所と処理方法を設定するプロパティです。" csspropertyname="" normalpropertyname="importfilemode" />
      <Property name="importtype" group="Misc." subgroup="" refreshinfo="" edittype="Number" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="ExcelImportObjectがインポートするファイルの形式を定数として設定するプロパティです。" csspropertyname="" normalpropertyname="importtype" />
      <Property name="importurl" group="Misc." subgroup="" refreshinfo="" edittype="String" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="ExcelImportObjectがImportを実行するサーバーのURLを設定するプロパティです。" csspropertyname="" normalpropertyname="importurl" />
      <Property name="name" group="Information" subgroup="" refreshinfo="" edittype="String" readonly="false" initonly="false" hidden="true" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="ExcelImportObjectの名前を設定するプロパティです。" csspropertyname="" normalpropertyname="name" />
      <Property name="quotechar" group="Misc." subgroup="" refreshinfo="" edittype="Enum" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="ExportImportQuoteType" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="インポート時にテキスト修飾子文字として使用する値を設定するプロパティです。" csspropertyname="" normalpropertyname="quotechar" />
      <Property name="separator" group="Misc." subgroup="" refreshinfo="" edittype="" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,iOS/iPadOS NRE,Android Default Web Browser,iOS/iPadOS Default Web Browser" description="インポート時に区切り文字として使用する値を設定するプロパティです。" csspropertyname="" normalpropertyname="separator" />
      <Property name="userawdatevalue" group="Misc." subgroup="" refreshinfo="" edittype="Boolean" defaultvalue="false" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="Excelのセル値が日付や時系列の場合、元の値のままImportするかを設定するプロパティです。" csspropertyname="" normalpropertyname="userawdatevalue" />
      <Property name="userawnumbervalue" group="Misc." subgroup="" refreshinfo="" edittype="Boolean" defaultvalue="true" readonly="false" initonly="false" hidden="false" control="false" expr="false" bind="false" deprecated="false" unused="false" mandatory="false" objectinfo="" enuminfo="" enuminfo2="" unitinfo="" delimiter="" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="Excelの数値データをインポートする際に、インポートするデータを実際の値、もしくは書式設定が反映された表示上の値、どちらの値でインポートするかを設定するプロパティです。" csspropertyname="" normalpropertyname="userawnumbervalue" />
    </PropertyInfo>
    <CSSInfo>
      <PropertyInfo />
    </CSSInfo>
    <StatusInfo />
    <ControlInfo />
    <MethodInfo>
      <Method name="addEvent" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="ExcelImportObjectにイベントを宣言して追加するメソッドです。">
        <Syntax text="ExcelImportObject.addEvent( strEventID )">
          <Return type="Boolean" description="イベントの追加に成功した場合は「true」を返します。&#xA;&#xA;イベントの追加に失敗した場合、もしくは同一のイベントIDが既に宣言されている場合は「false」を返します。" />
          <Arguments>
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="対象のイベントのIDを文字列として指定します。" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="addEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="ExcelImportObjectのイベントにハンドラ関数を追加するメソッドです。">
        <Syntax text="ExcelImportObject.addEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Number" description="イベントに追加されたハンドラ関数のインデックスを返します。&#xA;同一のハンドラ関数が既に存在する場合は該当のハンドラ関数のインデックスを返します。&#xA;正常に追加されなかった場合は「-1」を返します。" />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="イベント発生時に実行されるハンドラ関数をオブジェクト型として指定します。" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="ハンドラ関数が定義されているスコープを指定します。" />
            <Argument name="strEventID" type="String" in="true" out="true" option="true" variable="true" description="対象のイベントIDを指定します。" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="addEventHandlerLookup" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="検索結果の関数をExcelImportObjectのイベントにハンドラ関数として追加するメソッドです。">
        <Syntax text="ExcelImportObject.addEventHandlerLookup( strEventID, strFunc, objTarget )">
          <Return type="Number" description="イベントに追加されたハンドラ関数のインデックスを返します。&#xA;同一のハンドラ関数が既に存在する場合は該当のハンドラ関数のインデックスを返します。&#xA;正常に追加されなかった場合は「-1」を返します。" />
          <Arguments>
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="検索対象のハンドラ関数が定義されているスコープを指定します。指定した領域で見つからない場合は上位の領域で検索を行います。" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="対象のイベントIDを指定します。" />
            <Argument name="strFunc" type="String" in="false" out="false" option="false" variable="false" description="検索対象のハンドラ関数の名前を文字列として指定します。" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="clearEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="特定のイベントに登録されたハンドラ関数をすべて削除するメソッドです。">
        <Syntax text="ExcelImportObject.clearEventHandler( strEventID )">
          <Return type="Number" description="特定のイベントで削除されたハンドラ関数の数を返します。" />
          <Arguments>
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="すべてのハンドラ関数を削除するイベントのIDを設定します。" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="destroy" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="スクリプトで動的に生成したExcelImportObjectを削除するメソッドです。">
        <Syntax text="ExcelImportObject.destroy()">
          <Return type="Boolean" description="ExcelImportObjectが正常に削除された場合、「true」を返します。&#xA;&#xA;ExcelImportObjectが正常に削除されない場合、「false」を返します。" />
          <Arguments />
        </Syntax>
      </Method>
      <Method name="findEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="ExcelImportObjectの特定イベントからハンドラ関数を検索してインデックスを返すメソッドです。">
        <Syntax text="ExcelImportObject.findEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Number" description="特定のイベントで検出したハンドラ関数のインデックスを返します。&#xA;&#xA;特定のイベントで検索するハンドラ関数が存在しない場合、「-1」を返します。" />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="検索するハンドラ関数を設定します。" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="検索するハンドラ関数が定義された領域を設定します。" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="ハンドラ関数を検索するイベントのIDを設定します。" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="getEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="ExcelImportObjectの特定のイベントで指定されたインデックスに該当するハンドラ関数を返すメソッドです。">
        <Syntax text="ExcelImportObject.getEventHandler( strEventID, nIdx )">
          <Return type="Object" description="コンポーネントの削除に成功すると、削除されたコンポーネントのオブジェクトを返します。&#xA;&#xA;コンポーネントの削除に失敗すると、「null」を返します。" />
          <Arguments>
            <Argument name="nIdx" type="Number" in="false" out="false" option="false" variable="false" description="取得しようとするハンドラ関数のインデックスを設定します。&#xA;&#xA;ハンドラ関数のインデックスは、「0」から開始します。" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="ハンドラ関数を取得するイベントのIDを設定します。" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="importData" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="ファイルをDatasetにインポートするメソッドです。">
        <Syntax text="ExcelImportObject.importData( strSource,strRange,strOutDatasets [,strArgument] )">
          <Return type="" description="" />
          <Arguments>
            <Argument name="strArgument" type="String" in="false" out="false" option="false" variable="false" description="インポート時に必要な情報を&quot;変数名=変数値&quot;の形式で指定します。&#xA;&#xA;パラメータの対を1つ以上指定することができ、スペースで区切ります。&#xA;パスワードが設定されたExcelファイルをインポートする場合は&quot;filepassword=Excelファイルのパスワード&quot;を入力する必要があります。" />
            <Argument name="strOutDatasets" type="String" in="false" out="false" option="false" variable="false" description="インポートしたデータを保存するDatasetのIDを&quot;Dataset名=変数名&quot;の形式で指定します。&#xA;&#xA;Datasetは1つ以上指定することができ、スペースで区切ります。&#xA;右側の「変数名」は、strRangeパラメータ値の変数名を設定するか、「output1」...のように自動生成された変数名を指定します。" />
            <Argument name="strRange" type="String" in="false" out="false" option="false" variable="false" description="strSourceパラメータ値として指定したファイルからDatasetにインポートする領域を&quot;シート名!セル範囲:セル範囲&quot;の形式、もしくはインポートするファイルの形式がCSV、TXTである場合は&quot;開始領域:終了領域&quot;の形式で指定します。&#xA;&#xA;複数の領域を指定する必要がある場合、下記の形式で繰り返し設定します。&#xA;&#xA;strRange ::= '[Command=&amp;lt;strCommand&amp;gt;; Output=&amp;lt;dsName&amp;gt;; Head=&amp;lt;strArea&amp;gt;; Body=&amp;lt;strArea&amp;gt;]'&#xA;&#xA;&amp;lt;strCommand&amp;gt; ::= 'getsheetlist' | 'getsheetdata'&#xA;「getsheetlist」に設定した場合、strSourceに設定されたファイルからシートのリストをインポートします。&#xA;「getsheetdata」に設定した場合、strSourceに設定されたファイルで&amp;lt;strArea&amp;gt;のデータをインポートします。&#xA;  値を省略した場合は「getsheetdata」が適用されます。&#xA;&#xA;&amp;lt;dsName&amp;gt;&#xA;  インポートしたデータを持つ変数名です。&#xA;  strOutDatasetsから右代入変数として使用されます。&#xA;  値を省略した場合は「output1」、「output2」...のように自動設定されます。&#xA;&#xA;&amp;lt;strArea&amp;gt; ::= 'シート名!セル範囲:セル範囲'&#xA;  インポートするデータ領域を指定します。&#xA; 「Head」項目に定義された領域は、インポート時にDatasetのColumn名として使用されます。&#xA; 「Head」項目を省略した場合は「Column0」、「Column1」...のように自動設定されます。&#xA; 「Body」項目に定義された領域は、DatasetのRowデータにインポートされます。&#xA; 「Body」項目を省略した場合はすべてのレコードがインポートされます。&#xA;* シート名を省略すると、最初のシートが作業対象になります。&#xA;* 最初のシートではない任意のシートを指定する場合は「Head」、「Body」を両方とも設定する必要があります。&#xA;　下記のように指定した場合には、Headは最初のシートで処理され、Bodyのみ指定したシートで処理されます。&#xA;　Bodyで指定したセル領域がHeadに存在しない場合は、エラーが発生することがあります。&#xA;　[Command=getData;Output=output2;Body=Sheet2!A1;]&#xA;&#xA;* インポートするファイルの形式がCSV、TXTである場合は下記のように適用されます。&#xA;&#xA;&amp;lt;strCommand&amp;gt;サポートしません。&#xA;&amp;lt;strArea&amp;gt; ::= StartCol[,StartRow[:EndCol[,EndRow]]]&#xA;　「Head」項目でStartRow、EndCol、EndRowを省略すると、下記のように処理されます。&#xA;- StartRow=0, EndCol=ColumnCount-1, EndRow=0&#xA;　「Head」項目でEndRow設定値は無視し、StartRow設定値基準で動作します。&#xA;　「Body」項目でStartRow、EndCol、EndRowを省略すると、下記のように処理されます。&#xA;- StartRow=0, EndCol=ColumnCount-1, EndRow=RowCount-1" />
            <Argument name="strSource" type="String" in="false" out="false" option="false" variable="false" description="インポートするファイルの場所をURL形式の文字列として指定します。&#xA;&#xA;importfilemodeプロパティ値が「server」である場合、&quot;http://&quot;、&quot;https://&quot;形式でファイルの場所を設定します。&#xA;importfilemodeプロパティ値が「server」であり、且つ相対パスを設定している場合、importurlプロパティに設定されたパスを基準に処理されます。&#xA;importfilemodeプロパティ値が「local」であるか、strSourceパラメータ値を指定していない場合はFileDialogが表示され、ファイルを選択することができます。" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="importDataEx" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="IDで識別して、ファイルをDatasetにインポートするメソッドです。">
        <Syntax text="ExcelImportObject.importDataEx( strImportID, strSource,strRange,strOutDatasets [,strArgument] )">
          <Return type="" description="" />
          <Arguments>
            <Argument name="strArgument" type="String" in="false" out="false" option="false" variable="false" description="インポート時に必要な情報を&quot;変数名=変数値&quot;の形式で指定します。&#xA;&#xA;パラメータの対を1つ以上指定することができ、スペースで区切ります。&#xA;パスワードが設定されたExcelファイルをインポートする場合は&quot;filepassword=Excelファイルのパスワード&quot;を入力する必要があります。" />
            <Argument name="strImportID" type="String" in="false" out="false" option="false" variable="false" description="インポートを識別するためのIDを文字列として指定します。&#xA;&#xA;設定値はonsuccessイベントでExcelImportEventInfoオブジェクトのimportidプロパティに渡されます。" />
            <Argument name="strOutDatasets" type="String" in="false" out="false" option="false" variable="false" description="インポートしたデータを保存するDatasetのIDを&quot;Dataset名=変数名&quot;の形式で指定します。&#xA;&#xA;Datasetは1つ以上指定することができ、スペースで区切ります。&#xA;右側の「変数名」は、strRangeパラメータ値の変数名を設定するか、「output1」...のように自動生成された変数名を指定します。" />
            <Argument name="strRange" type="String" in="false" out="false" option="false" variable="false" description="strSourceパラメータ値として指定したファイルからDatasetにインポートする領域を&quot;シート名!セル範囲:セル範囲&quot;の形式、もしくはインポートするファイルの形式がCSV、TXTである場合は&quot;開始領域:終了領域&quot;の形式で指定します。&#xA;&#xA;複数の領域を指定する必要がある場合、下記の形式で繰り返し設定します。&#xA;&#xA;strRange ::= '[Command=&amp;lt;strCommand&amp;gt;; Output=&amp;lt;dsName&amp;gt;; Head=&amp;lt;strArea&amp;gt;; Body=&amp;lt;strArea&amp;gt;]'&#xA;&#xA;&amp;lt;strCommand&amp;gt; ::= 'getsheetlist' | 'getsheetdata'&#xA;「getsheetlist」に設定した場合、strSourceに設定されたファイルからシートのリストをインポートします。&#xA;「getsheetdata」に設定した場合、strSourceに設定されたファイルで&amp;lt;strArea&amp;gt;のデータをインポートします。&#xA;  値を省略した場合は「getsheetdata」が適用されます。&#xA;&#xA;&amp;lt;dsName&amp;gt;&#xA;  インポートしたデータを持つ変数名です。&#xA;  strOutDatasetsから右代入変数として使用されます。&#xA;  値を省略した場合は「output1」、「output2」...のように自動設定されます。&#xA;&#xA;&amp;lt;strArea&amp;gt; ::= 'シート名!セル範囲:セル範囲'&#xA;  インポートするデータ領域を指定します。&#xA; 「Head」項目に定義された領域は、インポート時にDatasetのColumn名として使用されます。&#xA; 「Head」項目を省略した場合は「Column0」、「Column1」...のように自動設定されます。&#xA; 「Body」項目に定義された領域は、DatasetのRowデータにインポートされます。&#xA; 「Body」項目を省略した場合はすべてのレコードがインポートされます。&#xA;* シート名を省略すると、最初のシートが作業対象になります。&#xA;* 最初のシートではない任意のシートを指定する場合は「Head」、「Body」を両方とも設定する必要があります。&#xA;　下記のように指定した場合には、Headは最初のシートで処理され、Bodyのみ指定したシートで処理されます。&#xA;　Bodyで指定したセル領域がHeadに存在しない場合は、エラーが発生することがあります。&#xA;　[Command=getData;Output=output2;Body=Sheet2!A1;]&#xA;&#xA;* インポートするファイルの形式がCSV、TXTである場合は下記のように適用されます。&#xA;&#xA;&amp;lt;strCommand&amp;gt;サポートしません。&#xA;&amp;lt;strArea&amp;gt; ::= StartCol[,StartRow[:EndCol[,EndRow]]]&#xA;　「Head」項目でStartRow、EndCol、EndRowを省略すると、下記のように処理されます。&#xA;- StartRow=0, EndCol=ColumnCount-1, EndRow=0&#xA;　「Head」項目でEndRow設定値は無視し、StartRow設定値基準で動作します。&#xA;　「Body」項目でStartRow、EndCol、EndRowを省略すると、下記のように処理されます。&#xA;- StartRow=0, EndCol=ColumnCount-1, EndRow=RowCount-1" />
            <Argument name="strSource" type="String" in="false" out="false" option="false" variable="false" description="インポートするファイルの場所をURL形式の文字列として指定します。&#xA;&#xA;importfilemodeプロパティ値が「server」である場合、&quot;http://&quot;、&quot;https://&quot;形式でファイルの場所を設定します。&#xA;importfilemodeプロパティ値が「server」であり、且つ相対パスを設定している場合、importurlプロパティに設定されたパスを基準に処理されます。&#xA;importfilemodeプロパティ値が「local」であるか、strSourceパラメータ値を指定していない場合はFileDialogが表示され、ファイルを選択することができます。" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="insertEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="ExcelImportObjectのイベントにハンドラ関数を指定した位置に挿入するメソッドです。">
        <Syntax text="ExcelImportObject.insertEventHandler( strEventID, nIndex, objFunc, objTarget )">
          <Return type="Number" description="イベントに挿入されたハンドラ関数のインデックスを返します。&#xA;同一のハンドラ関数が既に存在する場合は該当のハンドラ関数のインデックスを返します。&#xA;&#xA;正常に挿入されなかった場合は「-1」を返します。" />
          <Arguments>
            <Argument name="nIndex" type="Number" in="false" out="false" option="false" variable="false" description="ハンドラ関数が挿入される位置のインデックス値を指定します。&#xA;&#xA;-1を指定した場合は最後に追加されます。&#xA;イベントに設定されたハンドラ関数の個数より大きい値を指定した場合は最後に追加されます。&#xA;NaN値を指定した場合はECMA Scriptの仕様に基づいて0が設定されます。" />
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="イベント発生時に実行されるハンドラ関数をオブジェクト型として指定します。" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="ハンドラ関数が定義されているスコープを指定します。" />
            <Argument name="strEventID" type="String" in="true" out="true" option="true" variable="true" description="対象のイベントIDを指定します。" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="removeEvent" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="ExcelImportObjectに宣言された特定のイベントを削除するメソッドです。">
        <Syntax text="ExcelImportObject.removeEvent( strEventID )">
          <Return type="Boolean" description="イベントの削除に成功した場合は「true」を返します。&#xA;&#xA;イベントの削除に失敗、もしくは宣言されていないイベントIDの設定時は「false」を返します。" />
          <Arguments>
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="ExcelImportObjectから削除するイベントのIDを文字列に設定します。" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="removeEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="ExcelImportObjectの特定イベントからハンドラ関数を削除するメソッドです。">
        <Syntax text="ExcelImportObject.removeEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Number" description="ハンドラ関数の削除に成功すると、「1」を返します。&#xA;&#xA;ハンドラ関数の削除に失敗すると、「0」を返します。" />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="削除するハンドラ関数を設定します。" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="削除するハンドラ関数が定義された領域を設定します。" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="ハンドラ関数を削除するイベントのIDを設定します。" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="removeEventHandlerLookup" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="ExcelImportObjectの特定のイベントから検索された関数と同じハンドラ関数を削除するメソッドです。">
        <Syntax text="ExcelImportObject.removeEventHandlerLookup( strEventID, strFunc, objTarget )">
          <Return type="Number" description="ハンドラ関数の削除に成功すると、「1」を返します。&#xA;&#xA;ハンドラ関数の削除に失敗すると、「0」を返します。" />
          <Arguments>
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="削除するハンドラ関数が定義された領域を設定します。&#xA;該当領域に関数が定義されていない場合は、上位の領域に上がりながら検索します。" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="ハンドラ関数を削除するイベントIDを設定します。" />
            <Argument name="strFunc" type="String" in="false" out="false" option="false" variable="false" description="削除するハンドラ関数名を文字列に設定します。" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="setEventHandler" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="ExcelImportObjectの特定のイベントの最初のハンドラ関数を変更するメソッドです。">
        <Syntax text="ExcelImportObject.setEventHandler( strEventID, objFunc, objTarget )">
          <Return type="Number" description="最初のハンドラ関数の変更に成功すると、「0」を返します。&#xA;&#xA;最初のハンドラ関数の変更に失敗すると、「-1」を返します。" />
          <Arguments>
            <Argument name="objFunc" type="Object" in="false" out="false" option="false" variable="false" description="既存のハンドラ関数を置換する関数を設定します。" />
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="置き換えるハンドラ関数が定義された領域を設定します。" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="ハンドラ関数を変更するイベントのIDを設定します。" />
          </Arguments>
        </Syntax>
      </Method>
      <Method name="setEventHandlerLookup" group="" async="false" usecontextmenu="false" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="ExcelImportObjectの特定のイベントの最初のハンドラ関数を、検索された関数に変更するメソッドです。">
        <Syntax text="ExcelImportObject.setEventHandlerLookup( strEventID, strFunc, objTarget )">
          <Return type="Number" description="最初のハンドラ関数の変更に成功すると、「0」を返します。&#xA;&#xA;最初のハンドラ関数の変更に失敗すると、「-1」を返します。" />
          <Arguments>
            <Argument name="objTarget" type="Object" in="false" out="false" option="false" variable="false" description="置き換えるハンドラ関数を検索する領域を設定します。&#xA;該当領域に関数が定義されていない場合は、上位領域に上がりながら検索します。" />
            <Argument name="strEventID" type="String" in="false" out="false" option="false" variable="false" description="ハンドラ関数を変更するイベントのIDを設定します。" />
            <Argument name="strFunc" type="Object" in="false" out="false" option="false" variable="false" description="既存のハンドラ関数を置換する関数名を文字列に設定します。" />
          </Arguments>
        </Syntax>
      </Method>
    </MethodInfo>
    <EventHandlerInfo>
      <EventHandler name="onerror" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="インポート中にエラーが生じた際に発生するイベントです。">
        <Syntax text="ExcelImportObject.onerror(obj:nexacro.ExcelImportObject,e:nexacro.ExcelImportErrorEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="ExcelImportErrorEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
      <EventHandler name="onsuccess" group="Event" deprecated="false" unused="false" requirement="IE10,IE11,Edge,Chrome,Safari,Firefox,Windows NRE,macOS NRE,Android NRE,Android Default Web Browser" description="インポートが完了した際に発生するイベントです。">
        <Syntax text="ExcelImportObject.onsuccess(obj:nexacro.ExcelImportObject,e:nexacro.ExcelImportEventInfo);">
          <Return type="" description="" />
          <Arguments>
            <Argument name="e" type="ExcelImportEventInfo" in="false" out="false" option="false" variable="false" description="" />
          </Arguments>
        </Syntax>
      </EventHandler>
    </EventHandlerInfo>
  </Object>
</MetaInfo>
